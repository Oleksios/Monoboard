<UserControl
	x:Class="Monoboard.View.Settings.SettingsControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:Monoboard.View.Settings"
	xmlns:settings="clr-namespace:Monoboard.View.Settings"
	xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
	xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
	xmlns:validation="clr-namespace:Monoboard.Helpers.Validation"
	xmlns:helpers="clr-namespace:Monoboard.Helpers"
	xmlns:mde="https://spiegelp.github.io/MaterialDesignExtensions/winfx/xaml"
	xmlns:materialDesignColors="clr-namespace:MaterialDesignColors;assembly=MaterialDesignColors"
	xmlns:settingsViewModels="clr-namespace:Monoboard.ViewModel.SettingsViewModels"
	xmlns:wpf="clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf"
	xmlns:converter="clr-namespace:Monoboard.Helpers.Converter">
	<UserControl.Resources>

		<DataTemplate x:Key="ForgotPasswordViewModelTemplate" DataType="{x:Type settingsViewModels:ForgotPasswordViewModel}">
			<materialDesign:Transitioner
				SelectedIndex="{Binding ForgotPasswordTransitionerIndex}">
				<Button
					Margin="32 32 32 0"
					Command="{Binding PasswordResetCommand}"
					Style="{DynamicResource MaterialDesignFlatAccentButton}"
					HorizontalAlignment="Center"
					VerticalAlignment="Center">
					<StackPanel Orientation="Horizontal">
						<TextBlock
							VerticalAlignment="Center"
							Foreground="{DynamicResource MaterialDesignBody}"
							Text="{DynamicResource MbPasswordReset}"/>
						<materialDesign:PackIcon 
							VerticalAlignment="Center"
							Margin="8 0"
							Foreground="{DynamicResource MaterialDesignBody}"
							Kind="PasswordReset"/>
					</StackPanel>
				</Button>
				<materialDesign:TransitionerSlide>
					<Grid Margin="0 32 0 0">
						<Grid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>

						<TextBlock
							Grid.Row="0"
							Grid.ColumnSpan="2"
							FontWeight="Medium"
							FontSize="16"
							Margin="8"
							Text="{DynamicResource MbYourNewPassword}"/>

						<TextBox
							Grid.Row="1"
							Grid.Column="0"
							Style="{DynamicResource MaterialDesignOutlinedTextBox}"
							materialDesign:TextFieldAssist.TextFieldCornerRadius="8 0 0 8"
							IsReadOnly="True"
							Text="{Binding NewPassword}"/>

						<Button
							Grid.Row="1"
							Grid.Column="1"
							Height="50"
							Width="50"
							Command="{Binding CopyPasswordCommand}"
							Style="{DynamicResource MaterialDesignFlatDarkBgButton}"
							materialDesign:ButtonAssist.CornerRadius="0 8 8 0">
							<Button.Content>
								<materialDesign:PackIcon
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									Height="20"
									Width="20"
									Kind="ContentCopy"/>
							</Button.Content>
						</Button>
					</Grid>

				</materialDesign:TransitionerSlide>
			</materialDesign:Transitioner>
		</DataTemplate>

		<converter:MultiValueConverter x:Key="MultiValueConverter" />

		<Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
			<Setter Property="Margin" Value="0"/>
			<Setter Property="CommandParameter" Value="{Binding}"/>
			<Setter Property="VerticalAlignment" Value="Stretch"/>
			<Setter Property="HorizontalAlignment" Value="Stretch"/>
			<Setter Property="Foreground">
				<Setter.Value>
					<SolidColorBrush Color="{Binding ExemplarHue.Foreground, Mode=OneTime}"/>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="PalettePath" TargetType="Path">
			<Setter
				Property="Data"
				Value="M17.5,12A1.5,1.5 0 0,1 16,10.5A1.5,1.5 0 0,1 17.5,9A1.5,1.5 0 0,1 19,10.5A1.5,1.5 0 0,1 17.5,12M14.5,8A1.5,1.5 0 0,1 13,6.5A1.5,1.5 0 0,1 14.5,5A1.5,1.5 0 0,1 16,6.5A1.5,1.5 0 0,1 14.5,8M9.5,8A1.5,1.5 0 0,1 8,6.5A1.5,1.5 0 0,1 9.5,5A1.5,1.5 0 0,1 11,6.5A1.5,1.5 0 0,1 9.5,8M6.5,12A1.5,1.5 0 0,1 5,10.5A1.5,1.5 0 0,1 6.5,9A1.5,1.5 0 0,1 8,10.5A1.5,1.5 0 0,1 6.5,12M12,3A9,9 0 0,0 3,12A9,9 0 0,0 12,21A1.5,1.5 0 0,0 13.5,19.5C13.5,19.11 13.35,18.76 13.11,18.5C12.88,18.23 12.73,17.88 12.73,17.5A1.5,1.5 0 0,1 14.23,16H16A5,5 0 0,0 21,11C21,6.58 16.97,3 12,3Z"/>
			<Setter Property="Fill">
				<Setter.Value>
					<SolidColorBrush Color="{Binding ExemplarHue.Foreground, Mode=OneTime}"/>
				</Setter.Value>
			</Setter>
		</Style>

		<DataTemplate DataType="{x:Type materialDesignColors:Swatch}">
			<materialDesign:Card
				Margin="2 2 6 6"
				Width="240">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>

					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>

					<TextBlock
						Text="{Binding Name}"
						Margin="8"
						Grid.ColumnSpan="2"/>

					<Border
						Grid.Row="1"
						Grid.Column="0"
						MinWidth="120">
						<Border.Background>
							<SolidColorBrush Color="{Binding ExemplarHue.Color, Mode=OneTime}"/>
						</Border.Background>

						<Button
							Command="{Binding RelativeSource={RelativeSource FindAncestor,
									AncestorType={x:Type local:SettingsControl}},
									Path=DataContext.ApplyPrimaryCommand, Mode=OneTime}"
							CommandParameter="{Binding}">
							<StackPanel Orientation="Horizontal">
								<TextBlock Text="Primary"/>
								<Viewbox Width="16" Height="16">
									<Canvas Width="24" Height="24">
										<Path Style="{StaticResource PalettePath}"/>
									</Canvas>
								</Viewbox>
							</StackPanel>
						</Button>
					</Border>

					<Border
						Grid.Row="1"
						Grid.Column="1" 
						Width="120"
						Visibility="{Binding IsAccented, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneTime}">
						<Border.Background>
							<SolidColorBrush Color="{Binding AccentExemplarHue.Color, Mode=OneTime}"/>
						</Border.Background>

						<Button
							Command="{Binding RelativeSource={RelativeSource FindAncestor,
									AncestorType={x:Type local:SettingsControl}},
									Path=DataContext.ApplyAccentCommand, Mode=OneTime}"
							CommandParameter="{Binding}">
							<StackPanel Orientation="Horizontal">
								<TextBlock Text="Accent"/>
								<Viewbox Width="16" Height="16">
									<Canvas Width="24" Height="24">
										<Path Style="{StaticResource PalettePath}"/>
									</Canvas>
								</Viewbox>
							</StackPanel>
						</Button>
					</Border>
				</Grid>
			</materialDesign:Card>
		</DataTemplate>
	</UserControl.Resources>
	<materialDesign:DialogHost
		Name="DialogHost">
		<Grid Background="{DynamicResource MaterialDesignPaper}">
			<TabControl
				SelectionChanged="SettingsTabControl_OnSelectionChanged"
				mde:TabControlAssist.TabHeaderHorizontalAlignment="Stretch"
				Name="SettingsTabControl"
				Style="{DynamicResource MaterialDesignTabControl}">
				<TabItem>
					<TabItem.Header>
						<StackPanel
							Orientation="Vertical"
							HorizontalAlignment="Center">
							<materialDesign:PackIcon
								Kind="AccountSettings"
								Width="24"
								Height="24"
								HorizontalAlignment="Center"
								Foreground="{Binding Path=(mde:TabControlAssist.TabHeaderForeground),
									RelativeSource={
										RelativeSource FindAncestor, 
										AncestorType={x:Type TabItem}}}" />
							<TextBlock
								FontSize="14"
								FontWeight="Medium"
								Text="{DynamicResource MbAccountSettings}"
								Margin="0,8,0,0"
								HorizontalAlignment="Center"
								Foreground="{Binding Path=(mde:TabControlAssist.TabHeaderForeground),
									RelativeSource={
										RelativeSource FindAncestor,
										AncestorType={x:Type TabItem}}}" />
						</StackPanel>
					</TabItem.Header>
					<WrapPanel>
						<materialDesign:Card
							Width="475"
							Height="{Binding ElementName=PasswordTransitioner, Path=Height, Mode=TwoWay}"
							Margin="8">
							<materialDesign:Transitioner
								MouseEnter="PasswordTransitioner_OnMouseEnter"
								Name="PasswordTransitioner"
								SelectedIndex="{Binding PasswordSelectedIndex}"
								SelectionChanged="Selector_OnSelectionChanged">
								<Button
									Margin="32"
									Command="{x:Static materialDesign:Transitioner.MoveNextCommand}"
									Style="{DynamicResource MaterialDesignFlatAccentButton}"
									HorizontalAlignment="Center"
									VerticalAlignment="Center" Cursor="Hand">
									<StackPanel Orientation="Horizontal">
										<TextBlock
											VerticalAlignment="Center"
											Foreground="{DynamicResource MaterialDesignBody}"
											Text="{DynamicResource MbIsSetPassword}"/>
										<materialDesign:PackIcon 
											VerticalAlignment="Center"
											Margin="8 0"
											Foreground="{DynamicResource MaterialDesignBody}"
											Kind="Password"/>
									</StackPanel>
								</Button>
								<materialDesign:TransitionerSlide
									Name="SetPasswordContent"
									Visibility="Visible">
									<StackPanel Margin="8">

										<TextBlock
											FontWeight="Medium"
											FontSize="24"
											HorizontalAlignment="Center"
											Foreground="{DynamicResource MaterialDesignBody}"
											Text="{DynamicResource MbSetPasswordTitle}"/>

										<Grid>
											<PasswordBox
												Name="PasswordBox"
												Margin="8"
												Foreground="{DynamicResource MaterialDesignBody}"
												PasswordChanged="PasswordBox_PasswordChanged"
												Style="{StaticResource MaterialDesignFilledPasswordBox}"
												materialDesign:HintAssist.Hint="{DynamicResource MbPassword}"
												ToolTip="{DynamicResource MbPasswordRegEx}">
											</PasswordBox>

											<TextBox
												Name="ShowPasswordBox"
												Margin="8"
												TextChanged="ShowPasswordBox_OnTextChanged"
												Visibility="Collapsed"
												Foreground="{DynamicResource MaterialDesignBody}"
												Style="{DynamicResource MaterialDesignFilledTextBox}"
												materialDesign:HintAssist.Hint="{DynamicResource MbPassword}"
												ToolTip="{DynamicResource MbPasswordRegEx}"/>

											<ToggleButton
												Name="ShowPasswordToggleButton"
												Click="ShowPassword_OnClick"
												Margin="0 0 8 0"
												IsTabStop="False"
												HorizontalAlignment="Right"
												Style="{StaticResource MaterialDesignActionToggleButton}"
												Background="Transparent"
												Foreground="{DynamicResource PrimaryHueMidBrush}"
												ToolTip="{DynamicResource MbShowHidePassord}"
												Content="{materialDesign:PackIcon Kind=Password}"
												materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon Kind=Show}" />
										</Grid>

										<TextBlock
											Name="PasswordValidateBlock"
											Margin="5"
											FontSize="14"
											FontWeight="Medium"
											Foreground="{DynamicResource ProhibitoryHueBrush}"
											HorizontalAlignment="Center"
											Text="{Binding PasswordValidate}"/>

										<Grid>
											<PasswordBox
												Name="ConfirmPasswordBox"
												Margin="8"
												Foreground="{DynamicResource MaterialDesignBody}"
												PasswordChanged="ConfirmPasswordBox_PasswordChanged"
												Style="{StaticResource MaterialDesignFilledPasswordBox}"
												materialDesign:HintAssist.Hint="{DynamicResource MbConfirmPassword}"
												materialDesign:HintAssist.IsFloating="True"
												ToolTip="{DynamicResource MbPasswordRegEx}" />

											<TextBox
												Name="ShowConfirmPasswordBox"
												Margin="8"
												TextChanged="ShowConfirmPasswordBox_OnTextChanged"
												Visibility="Collapsed"
												Foreground="{DynamicResource MaterialDesignBody}"
												Style="{DynamicResource MaterialDesignFilledTextBox}"
												materialDesign:HintAssist.Hint="{DynamicResource MbConfirmPassword}"
												ToolTip="{DynamicResource MbPasswordRegEx}"/>

											<ToggleButton
												Name="ShowConfirmPasswordToggleButton"
												Click="ShowConfirmPassword_OnClick"
												Margin="0 0 8 0"
												IsTabStop="False"
												HorizontalAlignment="Right"
												Style="{StaticResource MaterialDesignActionToggleButton}"
												Background="Transparent"
												Foreground="{DynamicResource PrimaryHueMidBrush}"
												ToolTip="{DynamicResource MbShowHidePassord}"
												Content="{materialDesign:PackIcon Kind=Password}"
												materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon Kind=Show}" />
										</Grid>

										<TextBlock
											Name="ConfirmPasswordValidateBlock"
										    Margin="5"
											FontSize="14"
											FontWeight="Medium"
										    Foreground="{DynamicResource ProhibitoryHueBrush}"
											HorizontalAlignment="Center"
											Text="{Binding ConfirmPasswordValidate}"/>

										<Button
											IsEnabled="{Binding IsPasswordCorrect}"
											Style="{DynamicResource MaterialDesignFlatButton}"
											Margin="8"
											Command="{Binding SetNewPasswordCommand}"
											CommandParameter="{Binding ElementName=ConfirmPasswordBox}"
											Cursor="Hand">
											<StackPanel Orientation="Horizontal">
												<TextBlock
													Margin="8 0"
													Text="{DynamicResource MbSetPasswordAlt}"/>
												<materialDesign:PackIcon Kind="PasswordSecure"/>
											</StackPanel>
										</Button>
									</StackPanel>
								</materialDesign:TransitionerSlide>
								<materialDesign:TransitionerSlide>
									<TextBlock
										Foreground="{DynamicResource AllowingHueBrush}"
										FontSize="24"
										FontWeight="Medium"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
										Margin="32"
										Text="{DynamicResource MbPasswordSetSuccessfully}"/>
								</materialDesign:TransitionerSlide>
								<materialDesign:TransitionerSlide>
									<TextBlock
										FontSize="24"
										FontWeight="Medium"
										Foreground="{DynamicResource ProhibitoryHueBrush}"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
										Margin="32"
										Text="{DynamicResource MbPasswordSetError}"/>
								</materialDesign:TransitionerSlide>
								<materialDesign:TransitionerSlide>
									<StackPanel
										Visibility="{Binding IsChangePasswordVisible,
											Converter={StaticResource BooleanToVisibilityConverter}}"
											Margin="8">

										<TextBlock
											FontWeight="Medium"
											FontSize="24"
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											Foreground="{DynamicResource MaterialDesignBody}"
											Text="{DynamicResource MbChangePasswordTitle}"/>

										<Grid>
											<PasswordBox
												Name="CheckPasswordBox"
												Margin="8"
												Foreground="{DynamicResource MaterialDesignBody}"
												PasswordChanged="CheckPasswordBox_PasswordChanged"
												Style="{StaticResource MaterialDesignFilledPasswordBox}"
												materialDesign:HintAssist.Hint="{DynamicResource MbCurrentPassword}"
												ToolTip="{DynamicResource MbPasswordRegEx}">
											</PasswordBox>

											<TextBox
												Name="CheckShowPasswordBox"
												Margin="8"
												TextChanged="CheckShowPasswordBox_OnTextChanged"
												Visibility="Collapsed"
												Foreground="{DynamicResource MaterialDesignBody}"
												Style="{DynamicResource MaterialDesignFilledTextBox}"
												materialDesign:HintAssist.Hint="{DynamicResource MbCurrentPassword}"
												ToolTip="{DynamicResource MbPasswordRegEx}"/>

											<ToggleButton
												Name="CheckShowPasswordToggleButton"
												Click="CheckShowPassword_OnClick"
												Margin="0 0 8 0"
												IsTabStop="False"
												HorizontalAlignment="Right"
												Style="{StaticResource MaterialDesignActionToggleButton}"
												Background="Transparent"
												Foreground="{DynamicResource PrimaryHueMidBrush}"
												ToolTip="{DynamicResource MbShowHidePassord}"
												Content="{materialDesign:PackIcon Kind=Password}"
												materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon Kind=Show}" />
										</Grid>

										<TextBlock
											Name="CheckPasswordValidateBlock"
											Margin="5"
											FontSize="14"
											FontWeight="Medium"
											Foreground="{DynamicResource ProhibitoryHueBrush}"
											HorizontalAlignment="Center"
											Visibility="{Binding IsCheckPasswordValidateBlockVisible, Mode=TwoWay}"
											Text="{Binding CheckPasswordValidate, Mode=TwoWay}"/>

										<Grid>
											<PasswordBox
												Name="UpdatePasswordBox"
												Margin="8"
												Foreground="{DynamicResource MaterialDesignBody}"
												PasswordChanged="UpdatePasswordBox_PasswordChanged"
												Style="{StaticResource MaterialDesignFilledPasswordBox}"
												materialDesign:HintAssist.Hint="{DynamicResource MbNewPassword}"
												ToolTip="{DynamicResource MbPasswordRegEx}">
											</PasswordBox>

											<TextBox
												Name="UpdateShowPasswordBox"
												Margin="8"
												TextChanged="UpdateShowPasswordBox_OnTextChanged"
												Visibility="Collapsed"
												Foreground="{DynamicResource MaterialDesignBody}"
												Style="{DynamicResource MaterialDesignFilledTextBox}"
												materialDesign:HintAssist.Hint="{DynamicResource MbNewPassword}"
												ToolTip="{DynamicResource MbPasswordRegEx}"/>

											<ToggleButton
												Name="UpdateShowPasswordToggleButton"
												Click="UpdateShowPassword_OnClick"
												Margin="0 0 8 0"
												IsTabStop="False"
												HorizontalAlignment="Right"
												Style="{StaticResource MaterialDesignActionToggleButton}"
												Background="Transparent"
												Foreground="{DynamicResource PrimaryHueMidBrush}"
												ToolTip="{DynamicResource MbShowHidePassord}"
												Content="{materialDesign:PackIcon Kind=Password}"
												materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon Kind=Show}" />
										</Grid>

										<TextBlock
											Name="UpdatePasswordValidateBlock"
											Margin="5"
											FontSize="14"
											FontWeight="Medium"
											Foreground="{DynamicResource ProhibitoryHueBrush}"
											HorizontalAlignment="Center"
											Text="{Binding PasswordValidate}"/>

										<Grid>
											<PasswordBox
												Name="UpdateConfirmPasswordBox"
												Margin="8"
												Foreground="{DynamicResource MaterialDesignBody}"
												PasswordChanged="UpdateConfirmPasswordBox_PasswordChanged"
												Style="{StaticResource MaterialDesignFilledPasswordBox}"
												materialDesign:HintAssist.Hint="{DynamicResource MbConfirmPassword}"
												materialDesign:HintAssist.IsFloating="True"
												ToolTip="{DynamicResource MbPasswordRegEx}"/>

											<TextBox
												Name="UpdateShowConfirmPasswordBox"
												Margin="8"
												TextChanged="UpdateShowConfirmPasswordBox_OnTextChanged"
												Visibility="Collapsed"
												Foreground="{DynamicResource MaterialDesignBody}"
												Style="{DynamicResource MaterialDesignFilledTextBox}"
												materialDesign:HintAssist.Hint="{DynamicResource MbConfirmPassword}"
												ToolTip="{DynamicResource MbPasswordRegEx}"/>

											<ToggleButton
												Name="UpdateShowConfirmPasswordToggleButton"
												Click="UpdateShowConfirmPassword_OnClick"
												Margin="0 0 8 0"
												IsTabStop="False"
												HorizontalAlignment="Right"
												Style="{StaticResource MaterialDesignActionToggleButton}"
												Background="Transparent"
												Foreground="{DynamicResource PrimaryHueMidBrush}"
												ToolTip="{DynamicResource MbShowHidePassord}"
												Content="{materialDesign:PackIcon Kind=Password}"
												materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon Kind=Show}" />
										</Grid>

										<TextBlock
											Name="UpdateConfirmPasswordValidateBlock"
										    Margin="5"
											FontSize="14"
											FontWeight="Medium"
										    Foreground="{DynamicResource ProhibitoryHueBrush}"
											HorizontalAlignment="Center"
											Text="{Binding ConfirmPasswordValidate}"/>

										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition/>
												<ColumnDefinition/>
											</Grid.ColumnDefinitions>
											<Button
												Style="{DynamicResource MaterialDesignFlatButton}"
												Margin="8"
												Click="ForgotPassword_OnClick"
												Cursor="Hand">
												<StackPanel Orientation="Horizontal">
													<TextBlock
														Margin="8 0"
														Text="{DynamicResource MbForgotPassword}"/>
													<materialDesign:PackIcon
														VerticalAlignment="Center"
														Kind="ForgotPassword"/>
												</StackPanel>
											</Button>

											<Button
												Grid.Column="1"
												IsEnabled="{Binding IsPasswordCorrect}"
												Style="{DynamicResource MaterialDesignFlatAccentButton}"
												Margin="8"
												Click="ChangePassword_OnClick"
												Command="{Binding UpdatePasswordCommand}"
												Cursor="Hand">
												<Button.CommandParameter>
													<MultiBinding Converter="{StaticResource MultiValueConverter}">
														<Binding ElementName="CheckPasswordBox"/>
														<Binding ElementName="UpdateConfirmPasswordBox"/>
													</MultiBinding>
												</Button.CommandParameter>
												<StackPanel Orientation="Horizontal">
													<TextBlock
														Margin="8 0"
														Text="{DynamicResource MbChangePassword}"/>
													<materialDesign:PackIcon
														VerticalAlignment="Center"
														Kind="PasswordSecure"/>
												</StackPanel>
											</Button>
										</Grid>

									</StackPanel>
								</materialDesign:TransitionerSlide>
								<materialDesign:TransitionerSlide>
									<TextBlock
										Foreground="{DynamicResource AllowingHueBrush}"
										FontSize="24"
										FontWeight="Medium"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
										Margin="32"
										Text="{DynamicResource MbPasswordChangeSuccessfully}"/>
								</materialDesign:TransitionerSlide>
							</materialDesign:Transitioner>
						</materialDesign:Card>
						<materialDesign:Card
							Width="475"
							VerticalAlignment="Top"
							Margin="8">
							<StackPanel
								Height="235"
								Name="DeleteAccountPanel"
								Margin="8 0">
								<TextBlock
									Margin="4"
									FontSize="24"
									HorizontalAlignment="Center"
									FontWeight="Medium"
									Foreground="{DynamicResource MaterialDesignBody}"
									Text="{DynamicResource MbDeleteAccountTitle}"/>

								<TextBlock
									Margin="16"
									FontSize="16"
									Foreground="{DynamicResource MaterialDesignBody}"
									Text="{DynamicResource MbDeleteAccountDescription}"/>

								<Button
									Style="{DynamicResource RedButton}"
									Click="DeleteAccountButton_OnClick"
									Margin="16 16 16 0">
									<StackPanel
										Orientation="Horizontal">
										<TextBlock
											Margin="4 0"
											Text="{DynamicResource MbDeleteAccount}"/>
										<materialDesign:PackIcon
											Margin="4 0"
											VerticalAlignment="Center"
											Kind="Delete"/>
									</StackPanel>
								</Button>
							</StackPanel>
						</materialDesign:Card>
						<materialDesign:Card
							Width="475"
							VerticalAlignment="Top"
							MaxHeight="{Binding ElementName=CompatibilityPanel, Path=ActualHeight}"
							Margin="8">
							<StackPanel
								Height="235"
								Name="CompatibilityPanel"
								Margin="8">
								<TextBlock
									Margin="4"
									FontSize="24"
									HorizontalAlignment="Center"
									FontWeight="Medium"
									Foreground="{DynamicResource MaterialDesignBody}"
									Text="{DynamicResource MbCompatibilityMode}"/>

								<TextBlock
									Margin="16"
									FontSize="16"
									Foreground="{DynamicResource MaterialDesignBody}"
									TextWrapping="Wrap"
									Text="{DynamicResource MbCompatibilityDescription}"/>

								<StackPanel
									Margin="32 4"
									Orientation="Horizontal">

									<TextBlock
										Foreground="{DynamicResource MaterialDesignBody}"
										Style="{DynamicResource MaterialDesignBody1TextBlock}"
										FontWeight="Medium"
										FontSize="16"
										Text="{DynamicResource MbOff}"/>

									<ToggleButton
										Name="ToggleCompatibilityMode"
										Margin="16 0"
										Style="{DynamicResource MaterialDesignSwitchAccentToggleButton}"
										MouseEnter="ToggleCompatibilityMode_OnMouseEnter"
										Unchecked="CompatibilityMode_OnUnchecked"
										Checked="CompatibilityMode_Checked"/>

									<TextBlock
										Foreground="{DynamicResource MaterialDesignBody}"
										Style="{DynamicResource MaterialDesignBody1TextBlock}"
										FontWeight="Medium"
										FontSize="16"
										Text="{DynamicResource MbOn}"/>

								</StackPanel>
							</StackPanel>
						</materialDesign:Card>
					</WrapPanel>
				</TabItem>
				<TabItem
					Foreground="{DynamicResource MaterialDesignBody}">
					<TabItem.Header>
						<StackPanel Orientation="Vertical" HorizontalAlignment="Center">
							<materialDesign:PackIcon
								Kind="ThemeLightDark"
								Width="24"
								Height="24"
								HorizontalAlignment="Center"
								Foreground="{Binding Path=(mde:TabControlAssist.TabHeaderForeground),
									RelativeSource={
										RelativeSource FindAncestor, 
										AncestorType={x:Type TabItem}}}" />
							<TextBlock
								FontSize="14"
								FontWeight="Medium"
								Text="{DynamicResource MbThemeSettings}"
								Margin="0,8,0,0"
								HorizontalAlignment="Center"
								Foreground="{Binding Path=(mde:TabControlAssist.TabHeaderForeground),
									RelativeSource={
										RelativeSource FindAncestor,
										AncestorType={x:Type TabItem}}}" />
						</StackPanel>
					</TabItem.Header>
					<DockPanel>
						<StackPanel
							DockPanel.Dock="Top"
							Margin="8">
							<StackPanel
								Margin="8"
								HorizontalAlignment="Left"
								Orientation="Horizontal">
								<TextBlock
									VerticalAlignment="Center"
									Text="{DynamicResource MbLightTheme}"/>

								<ToggleButton
									Name="ThemeSwitcher"
									IsChecked="{Binding IsDark}"
									Margin="8 0"
									Background="{DynamicResource SecondaryHueMidBrush}"
									materialDesign:ToggleButtonAssist.SwitchTrackOnBackground="{DynamicResource SecondaryHueMidBrush}"
									Command="{Binding ThemeSwitcherCommand}"
									CommandParameter="{Binding ElementName=ThemeSwitcher, Path=IsChecked}"
									Cursor="Hand"/>

								<TextBlock
									VerticalAlignment="Center"
									Text="{DynamicResource MbDarkTheme}"/>
							</StackPanel>

							<Separator Style="{DynamicResource MaterialDesignSeparator}"/>

							<StackPanel
								Margin="8"
								HorizontalAlignment="Left"
								Orientation="Horizontal">
								<TextBlock
									VerticalAlignment="Center"
									Text="{DynamicResource MbAdvanced}"/>

								<ToggleButton
									Name="AdvancedThemingToggle"
									Margin="8 0 16 0"
									Background="{DynamicResource SecondaryHueMidBrush}"
									materialDesign:ToggleButtonAssist.SwitchTrackOnBackground="{DynamicResource SecondaryHueMidBrush}"
									Command="{Binding SetAdvancedThemingCommand}"
									CommandParameter="{Binding ElementName=AdvancedThemingToggle, Path=IsChecked}"
									IsChecked="{Binding IsAdvancedTheme}"
									Cursor="Hand"/>

								<materialDesign:Badged
									IsEnabled="{Binding IsRestoreEnable}"
									Margin="32 0"
									Badge="{materialDesign:PackIcon Restore}"
									BadgeForeground="{DynamicResource SecondaryHueMidForegroundBrush}"
									BadgeColorZoneMode="SecondaryMid">
									<Button
										Style="{DynamicResource MaterialDesignFlatAccentButton}"
										Command="{Binding RestoreThemeCommand}"
										Content="{DynamicResource MbRestore}"/>
								</materialDesign:Badged>
							</StackPanel>

						</StackPanel>

						<materialDesign:Card
							DockPanel.Dock="Top"
							Margin="16 8">
							<DockPanel>
								<settings:Palette
									DockPanel.Dock="Left"/>
								<TextBlock
									Margin="16"
									TextWrapping="Wrap"
									VerticalAlignment="Center"
									Text="{DynamicResource MbCurrentPaletteDescription}"/>
							</DockPanel>
						</materialDesign:Card>

						<ScrollViewer
							IsEnabled="{Binding ElementName=AdvancedThemingToggle, Path=IsChecked}"
							VerticalScrollBarVisibility="Auto"
							HorizontalScrollBarVisibility="Disabled"
							Margin="16 8">
							<ItemsControl ItemsSource="{Binding Swatches, Mode=OneTime}">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<WrapPanel/>
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
							</ItemsControl>
						</ScrollViewer>
					</DockPanel>
				</TabItem>
				<TabItem>
					<TabItem.Header>
						<StackPanel
							Orientation="Vertical"
							HorizontalAlignment="Center">
							<materialDesign:PackIcon
								Kind="CreditCardSettingsOutline"
								Width="24"
								Height="24"
								HorizontalAlignment="Center"
								Foreground="{Binding Path=(mde:TabControlAssist.TabHeaderForeground),
									RelativeSource={
										RelativeSource FindAncestor, 
										AncestorType={x:Type TabItem}}}" />
							<TextBlock
								FontSize="14"
								FontWeight="Medium"
								Text="{DynamicResource MbCardsSettings}"
								Margin="0,8,0,0"
								HorizontalAlignment="Center"
								Foreground="{Binding Path=(mde:TabControlAssist.TabHeaderForeground),
									RelativeSource={
										RelativeSource FindAncestor,
										AncestorType={x:Type TabItem}}}" />
						</StackPanel>
					</TabItem.Header>

					<Grid>
						<TabControl
							Name="TabControlCardCustomization"
							SelectionChanged="TabControlCardCustomization_OnSelectionChanged"
							SelectedIndex="{Binding SelectedIndexCardSettings, Mode=OneWay}"
							Style="{DynamicResource MaterialDesignTabControl}"
							ItemsSource="{Binding Cards}">
							<TabControl.ItemsPanel>
								<ItemsPanelTemplate>
									<StackPanel Orientation="Horizontal"/>
								</ItemsPanelTemplate>
							</TabControl.ItemsPanel>
							<TabControl.ItemTemplate>
								<DataTemplate>
									<TextBlock Text="{Binding Path=Header}"/>
								</DataTemplate>
							</TabControl.ItemTemplate>
							<TabControl.ContentTemplate>
								<DataTemplate>
									<ContentPresenter Content="{Binding Path=Card}"/>
								</DataTemplate>
							</TabControl.ContentTemplate>
						</TabControl>
					</Grid>
				</TabItem>
				<TabItem>
					<TabItem.Header>
						<StackPanel Orientation="Vertical" HorizontalAlignment="Center">
							<materialDesign:PackIcon
								Kind="Api"
								Width="24"
								Height="24"
								HorizontalAlignment="Center"
								Foreground="{Binding Path=(mde:TabControlAssist.TabHeaderForeground),
									RelativeSource={
										RelativeSource FindAncestor, 
										AncestorType={x:Type TabItem}}}" />
							<TextBlock
								FontSize="14"
								FontWeight="Medium"
								Text="{DynamicResource MbApiSettings}"
								Margin="0,8,0,0"
								HorizontalAlignment="Center"
								Foreground="{Binding Path=(mde:TabControlAssist.TabHeaderForeground),
									RelativeSource={
										RelativeSource FindAncestor,
										AncestorType={x:Type TabItem}}}" />
						</StackPanel>
					</TabItem.Header>
					<DockPanel>
						<Grid
							DockPanel.Dock="Left">
							<Grid.Background>
								<ImageBrush ImageSource="../../Resources/Images/BackgroundVariant2.png"/>
							</Grid.Background>
							<StackPanel
								VerticalAlignment="Center">
								<TextBlock
									FontSize="32"
									HorizontalAlignment="Center"
									Text="{DynamicResource MbTitle}"/>

								<TextBox
									Name="MonobankApiKey"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									Margin="16"
									Width="320"
									materialDesign:TextFieldAssist.HasClearButton="True"
									materialDesign:ValidationAssist.Background="Transparent"
									materialDesign:ValidationAssist.UsePopup="True"
									materialDesign:ValidationAssist.PopupPlacement="Bottom"
									materialDesign:ValidationAssist.OnlyShowOnFocus="True"
									materialDesign:HintAssist.Hint="{DynamicResource MbEnterApiKey}"
									materialDesign:HintAssist.Background="{DynamicResource MaterialDesignLightBackground}"
									materialDesign:HintAssist.FloatingScale="1.05"
									Background="{DynamicResource MaterialDesignLightBackground}"
									Style="{DynamicResource MaterialDesignOutlinedTextBox}">
									<Binding
										Path="Text"
										Mode="OneWay"
										UpdateSourceTrigger="PropertyChanged"
										NotifyOnValidationError="True"
										ElementName="MonobankApiKey">
										<Binding.ValidationRules>
											<validation:MonobankApiValidation
													ValidatesOnTargetUpdated="True"/>
										</Binding.ValidationRules>
									</Binding>
								</TextBox>

								<TextBlock
									FontSize="16"
									HorizontalAlignment="Center"
									Foreground="{DynamicResource ErrorColorBrush}"
									Text="{DynamicResource MbWarningData}"/>

								<Button
									Name="TokenChangesButton"
									Margin="16"
									Command="{Binding SaveMonobankTokenCommand}"
									CommandParameter="{Binding ElementName=MonobankApiKey, Path=Text}"
									Padding="8">
									<Button.Content>
										<StackPanel Orientation="Horizontal">
											<TextBlock
												VerticalAlignment="Center"
												Text="{DynamicResource MbSave}"
												Margin="0 0 8 0"/>
											<materialDesign:PackIcon Kind="ContentSave"/>
										</StackPanel>
									</Button.Content>
									<Button.Style>
										<Style
											TargetType="Button"
											BasedOn="{StaticResource WhiteButton}">
											<Style.Triggers>
												<DataTrigger
													Binding="{Binding Path=(Validation.HasError), ElementName=MonobankApiKey}"
													Value="True">
													<Setter
														Property="IsEnabled"
														Value="False" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</Button.Style>
								</Button>
							</StackPanel>
						</Grid>

						<wpf:WebView2
							SizeChanged="WebControl_OnSizeChanged"
							Name="WebControl"
							NavigationStarting="WebControl_OnNavigationStarting"
							CoreWebView2Ready="WebControl_OnCoreWebView2Ready"
							Source="https://api.monobank.ua/"/>
					</DockPanel>
				</TabItem>
			</TabControl>

			<materialDesign:Snackbar
				MaxWidth="{Binding ElementName=TokenChangesButton, Path=ActualWidth}"
				HorizontalAlignment="Left"
				Margin="16"
				MessageQueue="{Binding Messages}"/>

			<mde:BusyOverlay
				Background="{DynamicResource MaterialDesignDarkBackground}"
				Opacity="0.75"
				HorizontalContentAlignment="Stretch"
				VerticalContentAlignment="Stretch"
				IsBusy="{Binding Path=IsBusy}"
				Progress="{Binding Path=Progress}"
				Style="{StaticResource MaterialBusyOverlayCircularProgress}" />
		</Grid>
	</materialDesign:DialogHost>
</UserControl>
